"""Add created_by_user_id and updated_by_user_id to Shift and ShiftAssignment

Revision ID: 6173a6f4212a
Revises: afccbbd3068e
Create Date: 2025-07-24 20:39:33.612573

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6173a6f4212a'
down_revision: Union[str, Sequence[str], None] = 'afccbbd3068e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('employee_holidays')
    op.drop_index(op.f('ix_holiday_calendars_id'), table_name='holiday_calendars')
    op.drop_table('holiday_calendars')
    op.add_column('shift_assignments', sa.Column('created_by_user_id', sa.Integer(), nullable=True))
    op.add_column('shift_assignments', sa.Column('updated_by_user_id', sa.Integer(), nullable=True))
    op.add_column('shift_assignments', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('shift_assignments', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.create_foreign_key(None, 'shift_assignments', 'users', ['updated_by_user_id'], ['id'])
    op.create_foreign_key(None, 'shift_assignments', 'users', ['created_by_user_id'], ['id'])
    op.add_column('shifts', sa.Column('created_by_user_id', sa.Integer(), nullable=True))
    op.add_column('shifts', sa.Column('updated_by_user_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'shifts', 'users', ['created_by_user_id'], ['id'])
    op.create_foreign_key(None, 'shifts', 'users', ['updated_by_user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'shifts', type_='foreignkey')
    op.drop_constraint(None, 'shifts', type_='foreignkey')
    op.drop_column('shifts', 'updated_by_user_id')
    op.drop_column('shifts', 'created_by_user_id')
    op.drop_constraint(None, 'shift_assignments', type_='foreignkey')
    op.drop_constraint(None, 'shift_assignments', type_='foreignkey')
    op.drop_column('shift_assignments', 'updated_at')
    op.drop_column('shift_assignments', 'created_at')
    op.drop_column('shift_assignments', 'updated_by_user_id')
    op.drop_column('shift_assignments', 'created_by_user_id')
    op.create_table('holiday_calendars',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('holiday_calendars_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('is_optional', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_national', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('department_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DATE(), server_default=sa.text('CURRENT_DATE'), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], name='holiday_calendars_created_by_user_id_fkey'),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='holiday_calendars_department_id_fkey'),
    sa.ForeignKeyConstraint(['updated_by_user_id'], ['users.id'], name='holiday_calendars_updated_by_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='holiday_calendars_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_holiday_calendars_id'), 'holiday_calendars', ['id'], unique=False)
    op.create_table('employee_holidays',
    sa.Column('holiday_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name=op.f('employee_holidays_employee_id_fkey')),
    sa.ForeignKeyConstraint(['holiday_id'], ['holiday_calendars.id'], name=op.f('employee_holidays_holiday_id_fkey'))
    )
    # ### end Alembic commands ###
