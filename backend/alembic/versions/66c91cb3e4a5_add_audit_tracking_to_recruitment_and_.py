"""Add audit tracking to recruitment and candidate

Revision ID: 66c91cb3e4a5
Revises: 555e426b54b2
Create Date: 2025-07-25 11:05:57.439902

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '66c91cb3e4a5'
down_revision: Union[str, Sequence[str], None] = '555e426b54b2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recruitments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('posted_date', sa.Date(), nullable=True),
    sa.Column('deadline', sa.Date(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('created_by_employee_id', sa.Integer(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_employee_id'], ['employees.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recruitments_id'), 'recruitments', ['id'], unique=False)
    op.create_table('candidates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('resume', sa.String(), nullable=True),
    sa.Column('applied_date', sa.Date(), nullable=True),
    sa.Column('recruitment_id', sa.Integer(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['recruitment_id'], ['recruitments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_candidates_id'), 'candidates', ['id'], unique=False)
    op.drop_table('employee_holidays')
    op.drop_index(op.f('ix_holiday_calendars_id'), table_name='holiday_calendars')
    op.drop_table('holiday_calendars')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('holiday_calendars',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('holiday_calendars_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('is_optional', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_national', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('department_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DATE(), server_default=sa.text('CURRENT_DATE'), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], name='holiday_calendars_created_by_user_id_fkey'),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name='holiday_calendars_department_id_fkey'),
    sa.ForeignKeyConstraint(['updated_by_user_id'], ['users.id'], name='holiday_calendars_updated_by_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='holiday_calendars_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_holiday_calendars_id'), 'holiday_calendars', ['id'], unique=False)
    op.create_table('employee_holidays',
    sa.Column('holiday_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name=op.f('employee_holidays_employee_id_fkey')),
    sa.ForeignKeyConstraint(['holiday_id'], ['holiday_calendars.id'], name=op.f('employee_holidays_holiday_id_fkey'))
    )
    op.drop_index(op.f('ix_candidates_id'), table_name='candidates')
    op.drop_table('candidates')
    op.drop_index(op.f('ix_recruitments_id'), table_name='recruitments')
    op.drop_table('recruitments')
    # ### end Alembic commands ###
