"""add employee_contracts table

Revision ID: 7686444413c2
Revises: b80de0e91d52
Create Date: 2025-07-27 23:24:05.692810

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7686444413c2'
down_revision: Union[str, Sequence[str], None] = 'b80de0e91d52'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employee_contracts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('contract_type', sa.String(length=100), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('salary', sa.Float(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['updated_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_contracts_id'), 'employee_contracts', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('employee_holidays',
    sa.Column('holiday_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name=op.f('employee_holidays_employee_id_fkey')),
    sa.ForeignKeyConstraint(['holiday_id'], ['holiday_calendars.id'], name=op.f('employee_holidays_holiday_id_fkey'))
    )
    op.create_table('holiday_calendars',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('is_optional', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_national', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('department_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by_user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', sa.DATE(), server_default=sa.text('CURRENT_DATE'), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], name=op.f('holiday_calendars_created_by_user_id_fkey')),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name=op.f('holiday_calendars_department_id_fkey')),
    sa.ForeignKeyConstraint(['updated_by_user_id'], ['users.id'], name=op.f('holiday_calendars_updated_by_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('holiday_calendars_pkey'))
    )
    op.create_index(op.f('ix_holiday_calendars_id'), 'holiday_calendars', ['id'], unique=False)
    op.drop_index(op.f('ix_employee_contracts_id'), table_name='employee_contracts')
    op.drop_table('employee_contracts')
    # ### end Alembic commands ###
